[{"C:\\Users\\IsaiasBriones\\desktop\\dear-diary\\src\\index.js":"1","C:\\Users\\IsaiasBriones\\desktop\\dear-diary\\src\\App.js":"2","C:\\Users\\IsaiasBriones\\desktop\\dear-diary\\src\\reportWebVitals.js":"3","C:\\Users\\IsaiasBriones\\Desktop\\dear-diary\\src\\index.js":"4","C:\\Users\\IsaiasBriones\\Desktop\\dear-diary\\src\\App.js":"5","C:\\Users\\IsaiasBriones\\Desktop\\dear-diary\\src\\reportWebVitals.js":"6","C:\\Users\\IsaiasBriones\\Desktop\\dear-diary\\src\\components\\Compose.js":"7","C:\\Users\\IsaiasBriones\\Desktop\\dear-diary\\src\\components\\Index.js":"8","C:\\Users\\IsaiasBriones\\Desktop\\dear-diary\\src\\history.js":"9"},{"size":500,"mtime":1607038134942,"results":"10","hashOfConfig":"11"},{"size":528,"mtime":1607038134942,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1607038134942,"results":"13","hashOfConfig":"11"},{"size":500,"mtime":1607038134942,"results":"14","hashOfConfig":"15"},{"size":576,"mtime":1607225832483,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1607038134942,"results":"17","hashOfConfig":"15"},{"size":3123,"mtime":1607232458459,"results":"18","hashOfConfig":"15"},{"size":2690,"mtime":1607233804915,"results":"19","hashOfConfig":"15"},{"size":87,"mtime":1607114365582,"results":"20","hashOfConfig":"15"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tsg75v",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"10f8i3o",{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"29"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"C:\\Users\\IsaiasBriones\\desktop\\dear-diary\\src\\index.js",[],"C:\\Users\\IsaiasBriones\\desktop\\dear-diary\\src\\App.js",[],"C:\\Users\\IsaiasBriones\\desktop\\dear-diary\\src\\reportWebVitals.js",[],"C:\\Users\\IsaiasBriones\\Desktop\\dear-diary\\src\\index.js",[],["42","43"],"C:\\Users\\IsaiasBriones\\Desktop\\dear-diary\\src\\App.js",["44","45"],"import React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport Index from './components/Index';\r\nimport Compose from './components/Compose';\r\nimport history from './history';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router history={history}>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Index}/>\r\n        <Route path=\"/compose\" exact component={Compose}/>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\IsaiasBriones\\Desktop\\dear-diary\\src\\reportWebVitals.js",[],"C:\\Users\\IsaiasBriones\\Desktop\\dear-diary\\src\\components\\Compose.js",["46"],"import React, { useState, useEffect } from \"react\";\r\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\r\nimport UIfx from 'uifx';\r\nimport alertAudio from '../sounds/wake.wav';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nconst Compose = (props) => {\r\n    const alert = new UIfx(alertAudio);\r\n    const wake = [\r\n      \"okay diary\", \"ok diary\", \"dear diary\", \"hey diary\", \"hello diary\", \"hi diary\", \"sup diary\"\r\n    ];\r\n  \r\n    const [paras, setParas] = useState([]);\r\n\r\n    /**\r\n    @desc This function will only sendQuery to witai\r\n    */\r\n    const sendQuery = ( query ) => {\r\n        // assemble url\r\n        const url = `https://api.wit.ai/message?v=${moment().format(\"YYYYMMDD\")}&q=${query.split(\" \").join(\"%20\")}`;\r\n        \r\n        // make GET request\r\n        axios.get(url, { headers: { 'Authorization': 'Bearer H2VXHIZES4DBHZCDWUXB6BKOINMHC66Z' } })\r\n        .then(res => {  \r\n\r\n            // if there are intents\r\n            if(res.data.intents.length){\r\n            let intent_name = res.data.intents[0].name;\r\n\r\n            switch(intent_name){\r\n                case \"delete_words\":\r\n                    let copyParas = paras;\r\n                    let edited = copyParas[copyParas.length - 1].split(\" \");\r\n                    edited.pop();\r\n\r\n                    if(edited.length){\r\n                        copyParas[copyParas.length - 1] = edited.join(\" \");\r\n                    } else{\r\n                        copyParas.pop();\r\n                    }\r\n\r\n                    console.log(copyParas);\r\n                    setParas(copyParas);\r\n                    \r\n                    \r\n                    break;\r\n                case \"save_entry\":\r\n                    break;\r\n                default:\r\n                    console.log(\"no match\");\r\n                    break;\r\n                }\r\n            }            \r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    // configure commands\r\n    const commands = wake.map(w => ({\r\n        command: `${w} *`,\r\n        callback: (query, {resetTranscript}) => { \r\n            \r\n            resetTranscript(); // delete command phrase\r\n            sendQuery(query);\r\n            alert.play();\r\n        }\r\n    }));\r\n\r\n    var { transcript, listening } = useSpeechRecognition({commands});\r\n    const [result, setResult] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setResult(transcript);\r\n\r\n        if(!listening){\r\n            if(transcript.length){\r\n                let copyParas = paras;\r\n                copyParas.push(transcript);\r\n                console.log(copyParas);\r\n                setParas(copyParas);\r\n            }\r\n    \r\n            SpeechRecognition.startListening();\r\n        }\r\n    }, [transcript, listening]);\r\n    \r\n    return(\r\n        <div className=\"h-100 w-100 border fixed-top\" hidden={props.hidden}>\r\n            <div className=\"alert alert-secondary border w-75 mx-auto mt-5\" role=\"alert\">\r\n                {paras.map((p, index) => (<p key={index}>{p}</p>))}\r\n                {result}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Compose;","C:\\Users\\IsaiasBriones\\Desktop\\dear-diary\\src\\components\\Index.js",["47","48"],"C:\\Users\\IsaiasBriones\\Desktop\\dear-diary\\src\\history.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":25},{"ruleId":"53","severity":1,"message":"57","line":1,"column":27,"nodeType":"55","messageId":"56","endLine":1,"endColumn":36},{"ruleId":"58","severity":1,"message":"59","line":86,"column":8,"nodeType":"60","endLine":86,"endColumn":31,"suggestions":"61"},{"ruleId":"53","severity":1,"message":"62","line":24,"column":23,"nodeType":"55","messageId":"56","endLine":24,"endColumn":38},{"ruleId":"53","severity":1,"message":"63","line":24,"column":40,"nodeType":"55","messageId":"56","endLine":24,"endColumn":55},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'paras'. Either include it or remove the dependency array.","ArrayExpression",["66"],"'finalTranscript' is assigned a value but never used.","'resetTranscript' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"67","fix":"68"},"Update the dependencies array to be: [transcript, listening, paras]",{"range":"69","text":"70"},[2741,2764],"[transcript, listening, paras]"]